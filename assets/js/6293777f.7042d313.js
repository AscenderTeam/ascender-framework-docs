"use strict";(self.webpackChunkascender_framework=self.webpackChunkascender_framework||[]).push([[7726],{7319:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=o(4848),t=o(8453);const a={sidebar_position:1,sidebar_label:"Creating an Application"},r="Creating an Ascender Framework Application",s={id:"essentials/creating-application",title:"Creating an Ascender Framework Application",description:"Bootstrap configuration",source:"@site/docs/essentials/creating-application.md",sourceDirName:"essentials",slug:"/essentials/creating-application",permalink:"/ascender-framework-docs/docs/essentials/creating-application",draft:!1,unlisted:!1,editUrl:"https://github.com/AscenderTeam/ascender-framework-docs/docs/essentials/creating-application.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Creating an Application"},sidebar:"tutorialSidebar",previous:{title:"Essentials",permalink:"/ascender-framework-docs/docs/category/essentials"},next:{title:"Controllers",permalink:"/ascender-framework-docs/docs/essentials/controllers"}},l={},c=[{value:"Bootstrap configuration",id:"bootstrap-configuration",level:3},{value:"Bootstrap structure",id:"bootstrap-structure",level:3},{value:"Handling Server Boot Up",id:"handling-server-boot-up",level:3},{value:"Core Application",id:"core-application",level:3},{value:"Handling Plugin Boot Up",id:"handling-plugin-boot-up",level:3},{value:"Handling Cli Boot Up",id:"handling-cli-boot-up",level:3}];function p(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"creating-an-ascender-framework-application",children:"Creating an Ascender Framework Application"}),"\n",(0,i.jsx)(n.h3,{id:"bootstrap-configuration",children:"Bootstrap configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Every Application that runs on Ascender Framework starts by setting up ",(0,i.jsx)(n.code,{children:"bootstrap.py"}),"\nThough after installation, ",(0,i.jsx)(n.code,{children:"bootstrap.py"})," is already set up, but sometimes you have specific tasks where you should set ",(0,i.jsx)(n.code,{children:"bootstrap.py"})," manually."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"from core.application import Application\nfrom core.cli import CLI\n\nclass Bootstrap:\n\n    @staticmethod\n    def server_boot_up(app: Application):\n        app.loader_module.register_controller({\n            'name': \"Ascender Framework API\",\n            'base_path': 'controllers',\n            'exclude_controllers': [],\n            'initialize_all_controllers': True,\n        })\n        app.loader_module.load_all_controllers()\n\n    @staticmethod\n    def cli_boot_up(app: Application, cli: CLI):\n        pass\n    \n    @staticmethod\n    def plugin_boot_up(app: Application):\n        pass\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"bootstrap-structure",children:"Bootstrap structure"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"bootstrap.py"})," has one static class called ",(0,i.jsx)(n.code,{children:"Bootstrap"})," and contains several necessery static methods and optional methods."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"from core.application import Application\nfrom core.cli import CLI\n\nclass Bootstrap:\n\n    @staticmethod\n    def server_boot_up(app: Application):\n        ...\n\n    @staticmethod\n    def cli_boot_up(app: Application, cli: CLI):\n        ...\n    \n    @staticmethod\n    def plugin_boot_up(app: Application):\n        ...\n"})}),"\n",(0,i.jsx)(n.p,{children:"The structure of a classic application might look like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u251c\u2500\u2500 bootstrap.py\n\u251c\u2500\u2500 controllers\n\u2502   \u2514\u2500\u2500 app\n\u2502       \u251c\u2500\u2500 endpoints.py\n\u2502       \u251c\u2500\u2500 service.py\n\u2502       \u2514\u2500\u2500 repository.py\n\u251c\u2500\u2500 core\n\u251c\u2500\u2500 bootstrap.py\n\u251c\u2500\u2500 entities\n\u2514\u2500\u2500 start.py\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"handling-server-boot-up",children:"Handling Server Boot Up"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Bootstrap.server_boot_up"})," method in bootstrap being called when Ascender Framework being launched as Running Server."]}),"\n",(0,i.jsx)(n.p,{children:"This method usually used to add controllers into active controllers registry, to initialize database driver, manage singletones and many other stuff related to Application."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"from core.application import Application\nfrom core.cli import CLI\n\nclass Bootstrap:\n    \n    @staticmethod\n    def server_boot_up(app: Application):\n        ...\n    \n    ...\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"core-application",children:"Core Application"}),"\n",(0,i.jsx)(n.p,{children:"The core application in Ascender Framework is main and core component that initializes and manages the entire application. It is responsible for setting up the server, configuring middleware, initializing the database, and loading controllers."}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/docs/api/application",children:"Application API"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"handling-plugin-boot-up",children:"Handling Plugin Boot Up"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Bootstrap.plugin_boot_up"})," method in bootstrap being called when Ascender Framework being launched as Running Server and this method will be executed before ",(0,i.jsx)(n.code,{children:"Bootstrap.server_boot_up"})," being called."]}),"\n",(0,i.jsx)(n.p,{children:"This method usually accepts application as an argument and is responsible for launching additional plugins and modules."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"from core.application import Application\nfrom core.cli import CLI\n\nclass Bootstrap:\n    ...\n\n    @staticmethod\n    def plugin_boot_up(app: Application):\n        app.use_plugin(SomePlugin())\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"handling-cli-boot-up",children:"Handling Cli Boot Up"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Bootstrap.cli_boot_up"})," method in bootstrap being called when Ascender Framework being launched and will be executed before ",(0,i.jsx)(n.code,{children:"Bootstrap.cli_boot_up"})," being called."]}),"\n",(0,i.jsx)(n.p,{children:"This method usually accepts cli (CLI registry) as an argument for adding cli to CLI Registry"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:'from core.application import Application\nfrom core.cli import CLI\n\nclass Bootstrap:\n    ...\n\n    @staticmethod\n    def cli_boot_up(app: Application, cli: CLI):\n        cli.register_generic(SomeGenericCLI)\n        cli.register_base("some_cli", SomeBasicCLI)\n'})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>s});var i=o(6540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);