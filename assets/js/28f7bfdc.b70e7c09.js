"use strict";(self.webpackChunkascender_framework=self.webpackChunkascender_framework||[]).push([[5099],{2086:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var s=r(4848),i=r(8453);const t={sidebar_position:2,sidebar_label:"CLI Types"},o="Ascender Framework Integrated CLI Types",c={id:"cli/cli-types",title:"Ascender Framework Integrated CLI Types",description:"Core CLIs",source:"@site/docs/cli/cli-types.md",sourceDirName:"cli",slug:"/cli/cli-types",permalink:"/ascender-framework-docs/docs/cli/cli-types",draft:!1,unlisted:!1,editUrl:"https://github.com/AscenderTeam/ascender-framework-docs/docs/cli/cli-types.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"CLI Types"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/ascender-framework-docs/docs/cli/intro"},next:{title:"Base CLI",permalink:"/ascender-framework-docs/docs/cli/base-cli"}},d={},l=[{value:"Core CLIs",id:"core-clis",level:3},{value:"Custom CLIs",id:"custom-clis",level:3}];function a(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ascender-framework-integrated-cli-types",children:"Ascender Framework Integrated CLI Types"}),"\n",(0,s.jsx)(n.h3,{id:"core-clis",children:"Core CLIs"}),"\n",(0,s.jsx)(n.p,{children:"Core Integrated CLIs are CLIs that already defined, there are few of them:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Server Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Made for managing a development server & building production server"}),"\n",(0,s.jsxs)(n.li,{children:["Usage: ",(0,s.jsx)(n.code,{children:"ascender run serve"})," or ",(0,s.jsx)(n.code,{children:"ascender run build"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Database Migrations"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Made for managing a database migrations."}),"\n",(0,s.jsxs)(n.li,{children:["Usage: ",(0,s.jsx)(n.code,{children:"ascender run migrations -h"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Controller Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Made for creating classical & identity (authentication) controllers"}),"\n",(0,s.jsxs)(n.li,{children:["Usage: ",(0,s.jsx)(n.code,{children:"ascender run ctrls -h"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"custom-clis",children:"Custom CLIs"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Custom CLIs"})," in the Ascender Framework are command-line interface commands developed by external developers to extend the framework's functionality according to specific project needs. These commands are distinct from the built-in core and additional CLIs provided by the Ascender Framework. Custom CLIs allow developers to introduce new command functionalities tailored to their requirements."]}),"\n",(0,s.jsx)(n.p,{children:"There are two main types of custom CLIs you can create within the Ascender Framework:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GenericCLI"}),": Allows for multiple command functions within a single class."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"BaseCLI"}),": Simplified CLI type with one command per class"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If you considering to create your own CLI app in Ascender Framework, we recommend you to create ",(0,s.jsx)(n.code,{children:"clis/"})," directory in your project root and proceed with next steps showed in the documentation"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var s=r(6540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);