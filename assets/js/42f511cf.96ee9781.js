"use strict";(self.webpackChunkascender_framework=self.webpackChunkascender_framework||[]).push([[8603],{7457:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=s(4848),i=s(8453);const o={sidebar_position:2,sidebar_label:"Configurating Database"},r="Configurating Database Engine",a={id:"database/configuration",title:"Configurating Database Engine",description:"Setting up Tortoise ORM",source:"@site/docs/database/configuration.md",sourceDirName:"database",slug:"/database/configuration",permalink:"/ascender-framework-docs/docs/database/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/AscenderTeam/ascender-framework-docs/docs/database/configuration.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Configurating Database"},sidebar:"tutorialSidebar",previous:{title:"Initializing Database",permalink:"/ascender-framework-docs/docs/database/initializing"},next:{title:"Database Entities",permalink:"/ascender-framework-docs/docs/database/entities"}},l={},c=[{value:"Setting up Tortoise ORM",id:"setting-up-tortoise-orm",level:3},{value:"SQLite",id:"sqlite",level:4},{value:"MySQL",id:"mysql",level:4},{value:"PostgreSQL",id:"postgresql",level:4},{value:"Setting up SQLAlchemy",id:"setting-up-sqlalchemy",level:3},{value:"SQLite",id:"sqlite-1",level:4},{value:"MySQL",id:"mysql-1",level:4},{value:"PostgreSQL",id:"postgresql-1",level:4}];function d(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configurating-database-engine",children:"Configurating Database Engine"}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-tortoise-orm",children:"Setting up Tortoise ORM"}),"\n",(0,t.jsx)(n.p,{children:"Currently Tortoise ORM supports various database drivers:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["SQLite (requires ",(0,t.jsx)(n.code,{children:"aiosqlite"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["PostgreSQL (requires ",(0,t.jsx)(n.code,{children:"asyncpg"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["MySQL (requires ",(0,t.jsx)(n.code,{children:"asyncmy"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Microsoft SQL Server/Oracle (requires ",(0,t.jsx)(n.code,{children:"asyncodbc"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial we will configure all of them for giving useful example."}),"\n",(0,t.jsx)(n.h4,{id:"sqlite",children:"SQLite"}),"\n",(0,t.jsxs)(n.p,{children:["To initialize Ascender Framework Database Engine with Tortoise ORM running on ",(0,t.jsx)(n.strong,{children:"SQLite"})," database we have to setup ",(0,t.jsx)(n.code,{children:"DATABASE_CONNECTION"})," constant in ",(0,t.jsx)(n.code,{children:"settings.py"})," of our Ascender Framework Project."]}),"\n",(0,t.jsx)(n.p,{children:"Here's how to do it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "connections": {\n        "default": {\n            "engine": "tortoise.backends.sqlite",\n            "credentials": {\n                "file_path": "database.db"  # Replace with your SQLite database file path\n            }\n        }\n    },\n    "apps": {\n        "models": {\n            "models": ["aerich.models"],  # Replace with the path to your models module\n            "default_connection": "default"\n        }\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["How you see, Tortoise ORM supports multiple database connections which someone can find useful. But in this example we setup ",(0,t.jsx)(n.code,{children:"DATABASE_CONNECTION"})," to work with only one ",(0,t.jsx)(n.code,{children:"default"})," connection that uses SQLite as database driver."]}),"\n",(0,t.jsxs)(n.p,{children:["Lower in ",(0,t.jsx)(n.code,{children:"apps"})," parameter, you can see definition of ",(0,t.jsx)(n.code,{children:"apps"})," which are database entities (models) tied to connection."]}),"\n",(0,t.jsx)(n.h4,{id:"mysql",children:"MySQL"}),"\n",(0,t.jsxs)(n.p,{children:["To initialize Ascender Framework Database Engine with Tortoise ORM running on ",(0,t.jsx)(n.strong,{children:"MySQL"})," database we have to setup ",(0,t.jsx)(n.code,{children:"DATABASE_CONNECTION"})," constant in ",(0,t.jsx)(n.code,{children:"settings.py"})," of our Ascender Framework Project."]}),"\n",(0,t.jsx)(n.p,{children:"Here's how to do it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "connections": {\n        "default": {\n            "engine": "tortoise.backends.mysql",\n            "credentials": {\n                "user": "mysql_user",  # Replace with your MySQL user\n                "password": "mysql_password", # Replace with your MySQL user password\n                "database": "mysql_database", # Replace with your MySQL database name\n                "host": "localhost", # Replace with your MySQL server host\n                "port": 3306, # Replace with your MySQL server port\n            }\n        }\n    },\n    "apps": {\n        "models": {\n            "models": ["aerich.models"],  # Replace with the path to your models module\n            "default_connection": "default"\n        }\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The differences from SQLite is that MySQL's ",(0,t.jsx)(n.code,{children:"credentials"})," parameter it differs from what was used in SQLite"]}),"\n",(0,t.jsx)(n.h4,{id:"postgresql",children:"PostgreSQL"}),"\n",(0,t.jsxs)(n.p,{children:["To initialize Ascender Framework Database Engine with Tortoise ORM running on ",(0,t.jsx)(n.strong,{children:"PostgreSQL"})," database we have to setup ",(0,t.jsx)(n.code,{children:"DATABASE_CONNECTION"})," constant in ",(0,t.jsx)(n.code,{children:"settings.py"})," of our Ascender Framework Project."]}),"\n",(0,t.jsx)(n.p,{children:"Here's how to do it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "connections": {\n        "default": {\n            "engine": "tortoise.backends.psycopg",\n            "credentials": {\n                "user": "postgresql_user",  # Replace with your PostgreSQL user\n                "password": "postgresql_password", # Replace with your PostgreSQL user password\n                "database": "postgresql_database", # Replace with your PostgreSQL database name\n                "host": "localhost", # Replace with your PostgreSQL server host\n                "port": 3306, # Replace with your PostgreSQL server port\n            }\n        }\n    },\n    "apps": {\n        "models": {\n            "models": ["aerich.models"],  # Replace with the path to your models module\n            "default_connection": "default"\n        }\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["To use PostgreSQL, we changed ",(0,t.jsx)(n.code,{children:"connections.default.engine"})," parameter into ",(0,t.jsx)(n.code,{children:"tortoise.backends.psycopg"})]}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-sqlalchemy",children:"Setting up SQLAlchemy"}),"\n",(0,t.jsx)(n.p,{children:"As same as Tortoise ORM supports various database drivers, SQLAlchemy supports some too:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["SQLite (requires ",(0,t.jsx)(n.code,{children:"aiosqlite"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["PostgreSQL (requires ",(0,t.jsx)(n.code,{children:"asyncpg"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["MySQL (requires ",(0,t.jsx)(n.code,{children:"asyncmy"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial we will configure all of them for giving useful example."}),"\n",(0,t.jsx)(n.h4,{id:"sqlite-1",children:"SQLite"}),"\n",(0,t.jsxs)(n.p,{children:["To initialize Ascender Framework Database Engine with SQLAlchemy running on ",(0,t.jsx)(n.strong,{children:"SQLite"})," database we have to setup ",(0,t.jsx)(n.code,{children:"DATABASE_CONNECTION"})," constant in ",(0,t.jsx)(n.code,{children:"settings.py"})," of our Ascender Framework Project."]}),"\n",(0,t.jsx)(n.p,{children:"Here's how to do it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "type": "dbstring",\n    "content": "sqlite+aiosqlite:///file_path" # Replace file_path with your own database file\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["SQLAlchemy's ",(0,t.jsx)(n.code,{children:"DATABASE_CONNECTION"})," configuration is quite simple and short compared to the one with Tortoise ORM."]}),"\n",(0,t.jsx)(n.p,{children:"If you don't like using database URI-like connection strings then there is another solution for you:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "type": "manual",\n    "content": {\n        "engine": "sqlite+aiosqlite",\n        "credentials": {\n            "file_path": "file_path" # Replace file_path with your own database file\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"In this one, connection configuration is close similar to TortoiseORM one. But we don't manage multiple connections here."}),"\n",(0,t.jsx)(n.h4,{id:"mysql-1",children:"MySQL"}),"\n",(0,t.jsxs)(n.p,{children:["To initialize Ascender Framework Database Engine with SQLAlchemy running on ",(0,t.jsx)(n.strong,{children:"MySQL"})," database we have to setup ",(0,t.jsx)(n.code,{children:"DATABASE_CONNECTION"})," constant in ",(0,t.jsx)(n.code,{children:"settings.py"})," of our Ascender Framework Project."]}),"\n",(0,t.jsx)(n.p,{children:"Here's how to do it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "type": "dbstring",\n    "content": "mysql+asyncmy:///username:password@localhost:3306/database" # Replace fields with your own database credentials\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["And here's configuration with type set to ",(0,t.jsx)(n.code,{children:"manual"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "type": "manual",\n    "content": {\n        "engine": "mysql+asyncmy",\n        "credentials": {\n            "user": "mysql_username", # Replace with your MySQL user\n            "password": "mysql_password", # Replace with your MySQL user password\n            "database": "mysql_database", # Replace with your MySQL database name\n            "host": "localhost", # Replace with your MySQL server host\n            "port": 3306 # Replace with your MySQL server port\n        }\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"postgresql-1",children:"PostgreSQL"}),"\n",(0,t.jsxs)(n.p,{children:["To initialize Ascender Framework Database Engine with SQLAlchemy running on ",(0,t.jsx)(n.strong,{children:"PostgreSQL"})," database we have to setup ",(0,t.jsx)(n.code,{children:"DATABASE_CONNECTION"})," constant in ",(0,t.jsx)(n.code,{children:"settings.py"})," of our Ascender Framework Project."]}),"\n",(0,t.jsx)(n.p,{children:"Here's how to do it:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "type": "dbstring",\n    "content": "postgresql+asyncpg:///username:password@localhost:5432/database" # Replace fields with your own database credentials\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["And here's configuration with type set to ",(0,t.jsx)(n.code,{children:"manual"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# settings.py\n...\nDATABASE_CONNECTION = {\n    "type": "manual",\n    "content": {\n        "engine": "postgresql+asyncpg",\n        "credentials": {\n            "user": "postgresql_username", # Replace with your MySQL user\n            "password": "postgresql_password", # Replace with your MySQL user password\n            "database": "postgresql_database", # Replace with your MySQL database name\n            "host": "localhost", # Replace with your MySQL server host\n            "port": 5432 # Replace with your MySQL server port\n        }\n    }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(6540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);